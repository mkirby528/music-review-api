openapi: "3.0.0"
info:
    version: "1.0.0"
    title: "Music Review API"
    description: Review Music

servers:
    - url: https://zjixv0m4di.execute-api.us-east-1.amazonaws.com/non-prod

paths:
    /albums:
        get:
            summary: Get all albums
            parameters:
                - in: query
                  name: sort_key
                  required: false
                  schema:
                      type: string
                      enum: [Rating, Title, Artist]
                      default: Title
                - in: query
                  name: sort_order
                  required: false
                  schema:
                      type: string
                      enum: [asc, ascending, desc, descending]
                      default: asc
                - in: query
                  name: limit
                  required: false
                  schema:
                      type: integer
                      minimum: 1
            responses:
                "200":
                    description: Returns all all albums that have been reviewed
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/AlbumResponseBody"
                                    
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        post:
            summary: Add an album review
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AlbumCreationRequestBody"
            responses:
                "201":
                    description: Created
    /albums/{albumId}:
        get:
            summary: Get album  
            parameters:
                - in: path
                  name: albumId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: Retrieved Album
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AlbumResponseBody"
                "404":
                    description: Album Not Found

        patch:
            summary: Update album 
            parameters:
                - in: path
                  name: albumId
                  required: true
                  schema:
                      type: string

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/AlbumCreationRequestBody"
            responses:
                "200":
                    description: Updated
        delete:
            summary: Delete album 
            parameters:
                - in: path
                  name: albumId
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Deleted
            

    /albums/{albumId}/addVinyl:
        patch:
            summary:  Add Vinyl 
            parameters:
                - in: path
                  name: albumId
                  required: true
                  schema:
                    type: string
            responses:
                "201":
                    description: Created
                "404": 
                    description: Album not Found


components:
    schemas:
        AlbumResponseBody:
            type: object
            properties:
                id:
                    type: string
                Title:
                    type: string
                Artist:
                    type: string
                Rating:
                    type: integer
                    minimum: 0
                    maximum: 10
                Type:
                    type: string
                    enum: ["ALBUM", "SONG"]
                DateListened:
                    type: string
                DateReleased:
                    type: string
                HaveViny:
                    type: boolean
                SpotifyURI:
                    type: string
                Images:
                    $ref: "#/components/schemas/ImagesObject"

        AlbumCreationRequestBody:
            type: object
            required:
                - Title
                - Artist
                - Rating
            properties:
                Title:
                    type: string
                Artist:
                    type: string
                Rating:
                    type: integer
                    minimum: 0
                    maximum: 10
                Type:
                    type: string
                    enum: ["ALBUM", "SONG"]
                DateListened:
                    type: string
                HaveViny:
                    type: boolean

        AlbumUpdateRequestBody:
            type: object
            properties:
                Title:
                    type: string
                Artist:
                    type: string
                Rating:
                    type: integer
                    minimum: 0
                    maximum: 10
                Type:
                    type: string
                    enum: ["ALBUM", "SONG"]
                DateListened:
                    type: string
                DateReleased:
                    type: string
                HaveViny:
                    type: boolean
                SpotifyURI:
                    type: string
                Images:
                    $ref: "#/components/schemas/ImagesObject"
        ImagesObject:
            description: Object containing images for the album
            type: object
            properties:
                sm:
                    type: string
                md:
                    type: string
                lg:
                    type: string

        Error:
            type: object
            required:
                - message
            properties:
                message:
                    description: A human readable error message
                    type: string
